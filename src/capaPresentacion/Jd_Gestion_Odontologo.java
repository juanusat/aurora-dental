/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package capaPresentacion;

import capaNegocio.*;
import com.github.lgooddatepicker.components.DatePickerSettings;
import com.github.lgooddatepicker.optionalusertools.DateVetoPolicy;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Antonio
 */
public class Jd_Gestion_Odontologo extends javax.swing.JDialog {

    cls_Trabajador objTra = new cls_Trabajador();

    /**
     * Creates new form jd_Gestion_Odontologo
     */
    public Jd_Gestion_Odontologo(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cargarTablaOdontologos();
        txtDni.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c) || txtDni.getText().length() >= 8) {
                    e.consume();
                }
            }
        });
        txtTelefono.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (!Character.isDigit(c) || txtTelefono.getText().length() >= 9) {
                    e.consume();
                }
            }
        });
        txtNombre.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    e.consume();
                }
            }
        });
        txtApellido.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    e.consume();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtDni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rbM = new javax.swing.JRadioButton();
        rbF = new javax.swing.JRadioButton();
        txtCorreo = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        txtLicencia = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOdontologos = new javax.swing.JTable();
        btnNuevo = new javax.swing.JButton();
        btnDarBaja = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtDireccion = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        dateN = new com.github.lgooddatepicker.components.DatePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestionar Odontólogo");

        jPanel1.setBackground(new java.awt.Color(225, 255, 255));

        jLabel2.setText("Nombre:");
        jLabel2.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 75, 97));

        jLabel4.setText("Apellido:");
        jLabel4.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 75, 97));

        jLabel5.setText("DNI:");
        jLabel5.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 75, 97));

        txtNombre.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtNombre.setMinimumSize(new java.awt.Dimension(64, 24));

        txtApellido.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtApellido.setMinimumSize(new java.awt.Dimension(64, 24));

        txtDni.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtDni.setMinimumSize(new java.awt.Dimension(64, 24));

        jLabel6.setText("Sexo:");
        jLabel6.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 75, 97));

        jLabel7.setText("Correo:");
        jLabel7.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 75, 97));

        jLabel9.setText("Teléfono:");
        jLabel9.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 75, 97));

        rbM.setText("Masculino");
        rbM.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        rbM.setForeground(new java.awt.Color(0, 75, 97));

        rbF.setText("Femenino");
        rbF.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        rbF.setForeground(new java.awt.Color(0, 75, 97));

        txtCorreo.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtCorreo.setMinimumSize(new java.awt.Dimension(64, 24));

        txtTelefono.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtTelefono.setMinimumSize(new java.awt.Dimension(64, 24));

        jLabel3.setText("Fecha Nac.");
        jLabel3.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 75, 97));

        jLabel8.setText("Dirección:");
        jLabel8.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 75, 97));

        jLabel10.setText("Especialidad:");
        jLabel10.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 75, 97));

        jLabel11.setText("Número Licencia:");
        jLabel11.setFont(new java.awt.Font("Cambria", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 75, 97));

        txtEspecialidad.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtEspecialidad.setMinimumSize(new java.awt.Dimension(64, 24));

        txtLicencia.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        txtLicencia.setMinimumSize(new java.awt.Dimension(64, 24));

        tblOdontologos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblOdontologos.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        tblOdontologos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOdontologosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblOdontologos);

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color2/plus-solid.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setBackground(new java.awt.Color(0, 178, 195));
        btnNuevo.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnDarBaja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color2/delete-right.png"))); // NOI18N
        btnDarBaja.setText("Dar Baja");
        btnDarBaja.setBackground(new java.awt.Color(0, 178, 195));
        btnDarBaja.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        btnDarBaja.setForeground(new java.awt.Color(255, 255, 255));
        btnDarBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDarBajaActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color2/pencil-solid.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setBackground(new java.awt.Color(0, 178, 195));
        btnModificar.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        btnModificar.setForeground(new java.awt.Color(255, 255, 255));
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color2/broom-wide.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBackground(new java.awt.Color(0, 178, 195));
        btnLimpiar.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        btnLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtDireccion.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color1/magnifying-glass-solid.png"))); // NOI18N
        btnBuscar.setBackground(new java.awt.Color(240, 253, 253));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color2/trash-solid.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setBackground(new java.awt.Color(0, 178, 195));
        btnEliminar.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/color2/right-from-bracket-solid.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.setBackground(new java.awt.Color(0, 178, 195));
        btnSalir.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));

        dateN.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnDarBaja)
                            .addGap(18, 18, 18)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnModificar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnLimpiar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(256, 256, 256)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(52, 52, 52))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(txtEspecialidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(14, 14, 14)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(rbM)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rbF))
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dateN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(30, 30, 30)))
                                .addGap(11, 11, 11)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(281, 281, 281))
                                    .addComponent(txtLicencia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtDireccion))))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rbM)
                        .addComponent(rbF)
                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLicencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo)
                    .addComponent(btnLimpiar))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificar)
                    .addComponent(btnDarBaja)
                    .addComponent(btnEliminar)
                    .addComponent(btnSalir))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        DatePickerSettings settings = dateN.getSettings();

        int anioActual = LocalDate.now().getYear();
        int mesActual = LocalDate.now().getMonthValue();
        int diaActual = LocalDate.now().getDayOfMonth();
        int anioLimite = anioActual - 27;

        // Fecha máxima permitida: 31 de diciembre del año anterior
        LocalDate fechaMaxima = LocalDate.of(anioLimite, mesActual, diaActual);

        // Usar una clase anónima que implementa DateVetoPolicy correctamente
        settings.setVetoPolicy(new DateVetoPolicy() {
            @Override
            public boolean isDateAllowed(LocalDate date) {
                boolean permitido = date.isBefore(fechaMaxima) || date.isEqual(fechaMaxima);
                return permitido;
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarControles() {
        txtNombre.setText("");
        txtApellido.setText("");
        txtDni.setText("");
        rbM.setSelected(false);
        rbF.setSelected(false);
        txtCorreo.setText("");
        txtTelefono.setText("");
        dateN.setDate(null);
        txtDireccion.setText("");
        txtEspecialidad.setText("");
        txtLicencia.setText("");
        cargarTablaOdontologos();
    }

    private void cargarTablaOdontologos() {
        try {
            ResultSet rs = objTra.listarOdontologos();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("Nombre");
            modelo.addColumn("Apellido");
            modelo.addColumn("Documento");
            modelo.addColumn("Sexo");
            modelo.addColumn("Correo");
            modelo.addColumn("Teléfono");
            modelo.addColumn("Fecha Nac.");
            modelo.addColumn("Dirección");
            modelo.addColumn("Especialidad");
            modelo.addColumn("Licencia");
            tblOdontologos.setModel(modelo);
            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getInt("trabajador_id"),
                    rs.getString("nombre"),
                    rs.getString("apellido"),
                    rs.getString("documento"),
                    rs.getString("sexo"),
                    rs.getString("email"),
                    rs.getString("telefono"),
                    rs.getDate("fecha_nacimiento"),
                    rs.getString("direccion"),
                    rs.getString("especialidad"),
                    rs.getString("numero_licencia")
                });
            }
            tblOdontologos.getTableHeader().setReorderingAllowed(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar odontólogos: " + e.getMessage());
        }
    }


    private void tblOdontologosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOdontologosMouseClicked
        if (tblOdontologos.getRowCount() != 0) {
            int filaSeleccionada = tblOdontologos.getSelectedRow();
            if (filaSeleccionada != -1) {
                txtNombre.setText(tblOdontologos.getValueAt(filaSeleccionada, 1).toString());
                txtApellido.setText(tblOdontologos.getValueAt(filaSeleccionada, 2).toString());
                txtDni.setText(tblOdontologos.getValueAt(filaSeleccionada, 3).toString());
                String sexo = tblOdontologos.getValueAt(filaSeleccionada, 4).toString();
                if (sexo.equals("m")) {
                    rbM.setSelected(true);
                } else {
                    rbF.setSelected(true);
                }

                txtCorreo.setText(tblOdontologos.getValueAt(filaSeleccionada, 5).toString());
                txtTelefono.setText(tblOdontologos.getValueAt(filaSeleccionada, 6).toString());
                java.util.Date date = (java.util.Date) tblOdontologos.getValueAt(filaSeleccionada, 7);
                if (date != null) {
                    if (date instanceof java.sql.Date) {
                        LocalDate localDate = ((java.sql.Date) date).toLocalDate();
                        dateN.setDate(localDate);
                    } else {
                        LocalDate localDate = date.toInstant()
                                .atZone(ZoneId.systemDefault())
                                .toLocalDate();
                        dateN.setDate(localDate);
                    }
                } else {
                    dateN.setDate(null);
                }

                txtDireccion.setText(tblOdontologos.getValueAt(filaSeleccionada, 8).toString());
                txtEspecialidad.setText(tblOdontologos.getValueAt(filaSeleccionada, 9).toString());
                txtLicencia.setText(tblOdontologos.getValueAt(filaSeleccionada, 10).toString());
            }
        }

    }//GEN-LAST:event_tblOdontologosMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        try {
            if (btnNuevo.getText().equals("Nuevo")) {
                btnNuevo.setText("Guardar");
                limpiarControles();
                txtNombre.requestFocus();
            } else {
                if (txtNombre.getText().trim().isEmpty() || txtApellido.getText().trim().isEmpty()
                        || txtDni.getText().trim().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Complete todos los campos obligatorios.");
                    return;
                }
                if (!rbF.isSelected() && !rbM.isSelected()) {
                    JOptionPane.showMessageDialog(this, "Seleccione un sexo");
                    return;
                }

                if (!((txtCorreo.getText().contains("@gmail.com") || txtCorreo.getText().contains("@hotmail.com") || txtCorreo.getText().contains("@outlook.com")) && txtCorreo.getText().endsWith(".com"))) {
                    JOptionPane.showMessageDialog(this, "Formato de correo electrónico no válido. Use @gmail.com, @hotmail.com o @outlook.com y debe terminar en .com.");
                    return;
                }

                System.out.println("PASO VALIDACIONES");
                String nombre = txtNombre.getText();
                String apellido = txtApellido.getText();
                String documento = txtDni.getText();
                String sexo = rbM.isSelected() ? "m" : "f";
                String email = txtCorreo.getText();
                String telefono = txtTelefono.getText();
                String fechaNacimiento;
                LocalDate selectedDate =dateN.getDate();
                if (selectedDate != null) {
                    fechaNacimiento = selectedDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd")) ;
                } else {
                    JOptionPane.showMessageDialog(this, "Debe seleccionar la fecha de nacimiento.");
                    return; 
                }
                System.out.println("Fecha Nac." + fechaNacimiento);
                String direccion = txtDireccion.getText();
                String especialidad = txtEspecialidad.getText();
                String numeroLicencia = txtLicencia.getText();
                String fechaIngreso = new SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date());

                String username = "";
                String passwordHash = "";

                Integer codCargo = 1;
                System.out.println("Los datos llegaron hasta el registro");
                Integer trabajadorId = objTra.registrarOdontologoCompleto(
                        nombre, apellido, documento, sexo, email, telefono,
                        fechaNacimiento, direccion, username, passwordHash,
                        codCargo, numeroLicencia, especialidad, fechaIngreso
                );
                cargarTablaOdontologos();
                btnNuevo.setText("Nuevo");
                JOptionPane.showMessageDialog(this, "Odontólogo registrado correctamente. ID=" + trabajadorId);
                limpiarControles();
            }
        } catch (Exception e) {
            // Captura cualquier excepción que ocurra dentro del bloque try
            JOptionPane.showMessageDialog(this, "Error al registrar odontólogo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            int fila = tblOdontologos.getSelectedRow();
            if (fila != -1) {
                Integer trabajadorId = Integer.parseInt(tblOdontologos.getValueAt(fila, 0).toString());
                Integer personaId = objTra.obtenerPersonaIdPorTrabajadorId(trabajadorId); // → Debes implementar este método

                String nombre = txtNombre.getText();
                String apellido = txtApellido.getText();
                String documento = txtDni.getText();
                String sexo = rbM.isSelected() ? "M" : "F";
                String email = txtCorreo.getText();
                String telefono = txtTelefono.getText();
                String fechaNacimiento = new SimpleDateFormat("yyyy-MM-dd").format(dateN.getDate());
                String direccion = txtDireccion.getText();
                String especialidad = txtEspecialidad.getText();
                String numeroLicencia = txtLicencia.getText();

                objTra.modificarOdontologo(trabajadorId, personaId, nombre, apellido, documento, sexo, email, telefono,
                        fechaNacimiento, direccion, especialidad, numeroLicencia);
                limpiarControles();
                cargarTablaOdontologos();
                JOptionPane.showMessageDialog(this, "Odontólogo modificado correctamente.");
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un odontólogo de la tabla para modificar.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al modificar odontólogo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarControles();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            String documento = txtDni.getText().trim();
            if (!documento.isEmpty()) {
                ResultSet rs = objTra.listarOdontologos();
                while (rs.next()) {
                    if (rs.getString("documento").equals(documento)) {
                        txtNombre.setText(rs.getString("nombre"));
                        txtApellido.setText(rs.getString("apellido"));
                        if (rs.getString("sexo").equals("M")) {
                            rbM.setSelected(true);
                        } else {
                            rbF.setSelected(true);
                        }
                        txtCorreo.setText(rs.getString("email"));
                        txtTelefono.setText(rs.getString("telefono"));
                        java.sql.Date sqlDate = rs.getDate("fecha_nacimiento");
                        if (sqlDate != null) {
                            dateN.setDate(sqlDate.toLocalDate());
                        } else {
                            dateN.setDate(null);
                        }

                        txtDireccion.setText(rs.getString("direccion"));
                        txtEspecialidad.setText(rs.getString("especialidad"));
                        txtLicencia.setText(rs.getString("numero_licencia"));
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "No se encontró odontólogo con ese documento.");
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un documento para buscar.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al buscar odontólogo: " + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            int fila = tblOdontologos.getSelectedRow();
            if (fila != -1) {
                Integer trabajadorId = Integer.parseInt(tblOdontologos.getValueAt(fila, 0).toString());
                int confirm = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar este odontólogo?", "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {
                    objTra.eliminarOdontologo(trabajadorId);
                    limpiarControles();
                    cargarTablaOdontologos();
                    JOptionPane.showMessageDialog(this, "Odontólogo eliminado correctamente.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un odontólogo de la tabla para eliminar.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar odontólogo: " + e.getMessage());
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnDarBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDarBajaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDarBajaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDarBaja;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSalir;
    private com.github.lgooddatepicker.components.DatePicker dateN;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton rbF;
    private javax.swing.JRadioButton rbM;
    private javax.swing.JTable tblOdontologos;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtLicencia;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
